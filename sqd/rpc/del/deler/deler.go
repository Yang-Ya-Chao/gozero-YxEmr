// Code generated by goctl. DO NOT EDIT.
// Source: del.proto

package deler

import (
	"context"

	"YxEmr/sqd/rpc/del/del"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Req  = del.Req
	Resp = del.Resp

	Deler interface {
		Do(ctx context.Context, in *Req, opts ...grpc.CallOption) (*Resp, error)
	}

	defaultDeler struct {
		cli zrpc.Client
	}
)

func NewDeler(cli zrpc.Client) Deler {
	return &defaultDeler{
		cli: cli,
	}
}

func (m *defaultDeler) Do(ctx context.Context, in *Req, opts ...grpc.CallOption) (*Resp, error) {
	client := del.NewDelerClient(m.cli.Conn())
	return client.Do(ctx, in, opts...)
}
